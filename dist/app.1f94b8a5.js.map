{"version":3,"sources":["js/app.js"],"names":["document","addEventListener","gridDisplay","querySelector","scoreDisplay","getElementById","width","winScore","score","squares","generate","randomNumber","Math","floor","random","length","children","getAttribute","innerHTML","num","moveRight","i","totalOne","totalTwo","totalThree","totalFour","filteredRow","parseInt","filter","missing","newRow","Array","fill","concat","setAttribute","moveLeft","zeros","moveDown","filteredColumn","newColumn","moveUp","combineRow","combinedTotal","checkForGameOver","checkForWin","combineColumn","keyRight","keyLeft","keyDown","keyUp","control","e","keyCode","removeEventListener","createBoard","square","createElement","appendChild","push","handleTouchStart","firstTouch","getTouches","touches","originalEvent","xDown","clientX","yDown","clientY","handleTouchMove","xUp","yUp","xDiff","yDiff","abs"],"mappings":";AAAAA,SAASC,iBAAiB,mBAAoB,WACpCC,IAAAA,EAAcF,SAASG,cAAc,SACrCC,EAAeJ,SAASK,eAAe,SAEvCC,GADgBN,SAASG,cAAc,WAC/B,GACRI,EAAW,KACbC,EAAQ,EACRC,EAAU,GAqBLC,SAAAA,IACDC,IAAAA,EAAeC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,QACnDN,GAA8D,GAA9DA,EAAQE,GAAcK,SAAS,GAAGC,aAAa,YAAiB,CAE/DR,EAAQE,GAAcO,UAA0CC,8BAAAA,OADtD,EADqD,iBAI7DT,IAMDU,SAAAA,IACA,IAAA,IAAIC,EAAE,EAAIA,EAAIf,EAAMA,EAAOe,IACxBA,GAAAA,EAAI,GAAM,EAAE,CAERC,IAAAA,EAAWb,EAAQY,GAAGL,SAAS,GAAGC,aAAa,YAC/CM,EAAWd,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YACjDO,EAAaf,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YACnDQ,EAAYhB,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YAIlDS,EAHM,CAACC,SAASL,GAAWK,SAASJ,GAAWI,SAASH,GAAaG,SAASF,IAG5DG,OAAS,SAAAT,GAAOA,OAAAA,IAClCU,EAAUvB,EAAQoB,EAAYX,OAE9Be,EADQC,MAAMF,GAASG,KAAK,GACbC,OAAOP,GAE1BjB,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACtDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACxDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACxDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,KAM3DK,SAAAA,IACA,IAAA,IAAId,EAAE,EAAIA,EAAIf,EAAMA,EAAOe,IACxBA,GAAAA,EAAI,GAAM,EAAE,CAERC,IAAAA,EAAWb,EAAQY,GAAGL,SAAS,GAAGC,aAAa,YAC/CM,EAAWd,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YACjDO,EAAaf,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YACnDQ,EAAYhB,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YAGlDS,EAFM,CAACC,SAASL,GAAWK,SAASJ,GAAWI,SAASH,GAAaG,SAASF,IAE5DG,OAAS,SAAAT,GAAOA,OAAAA,IAClCU,EAAUvB,EAAQoB,EAAYX,OAC9BqB,EAAQL,MAAMF,GAASG,KAAK,GAC5BF,EAASJ,EAAYO,OAAOG,GAEhC3B,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACtDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACxDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,IACxDrB,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAWJ,EAAO,KAM3DO,SAAAA,IACA,IAAA,IAAIhB,EAAE,EAAGA,EAAGf,EAAOe,IAAI,CACpBC,IAAAA,EAAWb,EAAQY,GAAGL,SAAS,GAAGC,aAAa,YAC/CM,EAAWd,EAAQY,EAAEf,GAAOU,SAAS,GAAGC,aAAa,YACrDO,EAAaf,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGC,aAAa,YAC3DQ,EAAYhB,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGC,aAAa,YAG1DqB,EAFS,CAACX,SAASL,GAAWK,SAASJ,GAAWI,SAASH,GAAaG,SAASF,IAEzDG,OAAS,SAAAT,GAAOA,OAAAA,IACxCU,EAAUvB,EAAQgC,EAAevB,OAEjCwB,EADQR,MAAMF,GAASG,KAAK,GACVC,OAAOK,GAE7B7B,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IACzD9B,EAAQY,EAAEf,GAAOU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IAC/D9B,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IACnE9B,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,KAKlEC,SAAAA,IACA,IAAA,IAAInB,EAAE,EAAGA,EAAGf,EAAOe,IAAI,CACpBC,IAAAA,EAAWb,EAAQY,GAAGL,SAAS,GAAGC,aAAa,YAC/CM,EAAWd,EAAQY,EAAEf,GAAOU,SAAS,GAAGC,aAAa,YACrDO,EAAaf,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGC,aAAa,YAC3DQ,EAAYhB,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGC,aAAa,YAG1DqB,EAFS,CAACX,SAASL,GAAWK,SAASJ,GAAWI,SAASH,GAAaG,SAASF,IAEzDG,OAAS,SAAAT,GAAOA,OAAAA,IACxCU,EAAUvB,EAAQgC,EAAevB,OACjCqB,EAAQL,MAAMF,GAASG,KAAK,GAC5BO,EAAYD,EAAeL,OAAOG,GAEtC3B,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IACzD9B,EAAQY,EAAEf,GAAOU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IAC/D9B,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,IACnE9B,EAAQY,EAAS,EAANf,GAAUU,SAAS,GAAGkB,aAAa,WAAWK,EAAU,KAOlEE,SAAAA,IACA,IAAA,IAAIpB,EAAG,EAAGA,EAAI,GAAIA,IACfZ,GAAAA,EAAQY,GAAGL,SAAS,GAAGC,aAAa,cAAgBR,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,YAAa,CACnGyB,IAAAA,EAAgBf,SAASlB,EAAQY,GAAGL,SAAS,GAAGC,aAAa,aAAeU,SAASlB,EAAQY,EAAE,GAAGL,SAAS,GAAGC,aAAa,aAE/HR,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWQ,GAC/CjC,EAAQY,EAAE,GAAGL,SAAS,GAAGkB,aAAa,WAAW,GACjD1B,GAASkC,EACTtC,EAAac,UAAYV,EACzBmC,IAGRC,IAGKC,SAAAA,IACA,IAAA,IAAIxB,EAAG,EAAGA,EAAI,GAAIA,IACfZ,GAAAA,EAAQY,GAAGL,SAAS,GAAGC,aAAa,cAAgBR,EAAQY,EAAEf,GAAOU,SAAS,GAAGC,aAAa,YAAa,CAGvGyB,IAAAA,EAAgBf,SAASlB,EAAQY,GAAGL,SAAS,GAAGC,aAAa,aAAeU,SAASlB,EAAQY,EAAEf,GAAOU,SAAS,GAAGC,aAAa,aAInIR,EAAQY,GAAGL,SAAS,GAAGkB,aAAa,WAAWQ,GAC/CjC,EAAQY,EAAEf,GAAOU,SAAS,GAAGkB,aAAa,WAAW,GACrD1B,GAASkC,EACTtC,EAAac,UAAYV,EACzBmC,IAIRC,IAMKE,SAAAA,IACL1B,IACAqB,IACArB,IACAV,IAEKqC,SAAAA,IACLZ,IACAM,IACAN,IACAzB,IAEKsC,SAAAA,IACLX,IACAQ,IACAR,IACA3B,IAGKuC,SAAAA,IACLT,IACAK,IACAL,IACA9B,IAKKwC,SAAAA,EAASC,GACNA,OAAAA,EAAEC,SACD,KAAA,GACDL,IACA,MAEC,KAAA,GACDE,IACA,MAEC,KAAA,GACDH,IACA,MACC,KAAA,GACDE,KAMHJ,SAAAA,IACA,IAAA,IAAIvB,EAAE,EAAGA,EAAIZ,EAAQM,OAAQM,IAC3BZ,EAAQY,GAAGL,SAAS,GAAGC,aAAa,aAAeV,IAClDH,EAAac,UAAY,WACzBlB,SAASqD,oBAAoB,QAAQH,IAMxCP,SAAAA,IAEA,IADDP,IAAAA,EAAQ,EACHf,EAAG,EAAGA,EAAGZ,EAAQM,OAAQM,IACuB,GAAlDZ,EAAQY,GAAGL,SAAS,GAAGC,aAAa,aACnCmB,IAGK,IAAVA,IACChC,EAAac,UAAY,WACzBlB,SAASqD,oBAAoB,QAAQH,KApOpCI,WAEA,IAAA,IAAIjC,EAAE,EAAGA,EAAIf,EAAMA,EAAQe,IAAI,CAC5BkC,IAAAA,EAASvD,SAASwD,cAAc,OAEpCD,EAAOrC,UAA0CC,8BAAAA,OADvC,EACV,YACAjB,EAAYuD,YAAYF,GACxB9C,EAAQiD,KAAKH,GAGjB7C,IACAA,IAGJ4C,GA0NAtD,SAASC,iBAAiB,QAAQiD,GAElClD,SAASC,iBAAiB,aAWjB0D,SAAiBR,GAChBS,IAAAA,EANDC,SAAWV,GACXA,OAAAA,EAAEW,SACFX,EAAEY,cAAcD,QAIFD,CAAWV,GAAG,GACjCa,EAAQJ,EAAWK,QACnBC,EAAQN,EAAWO,UAdmC,GAC1DnE,SAASC,iBAAiB,YAgBjBmE,SAAgBjB,GAChB,IAAEa,IAAWE,EACd,OAGAG,IAAAA,EAAMlB,EAAEW,QAAQ,GAAGG,QACnBK,EAAMnB,EAAEW,QAAQ,GAAGK,QAEnBI,EAAQP,EAAQK,EAChBG,EAAQN,EAAQI,EAEf1D,KAAK6D,IAAKF,GAAU3D,KAAK6D,IAAKD,GAC1BD,EAAQ,EAETxB,IAGAD,IAGC0B,EAAQ,EAETvB,IAGAD,IAIRgB,EAAQ,KACRE,EAAQ,OA9C4C,GAEpDF,IAAAA,EAAQ,KACRE,EAAQ","file":"app.1f94b8a5.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const gridDisplay = document.querySelector('.grid');\r\n    const scoreDisplay = document.getElementById('score')\r\n    const resultDsiplay = document.querySelector('.result');\r\n    const width = 4;\r\n    const winScore = 2048;\r\n    let score = 0;\r\n    let squares = [];\r\n\r\n    //create a playing board;\r\n    function createBoard() {\r\n\r\n        for( let i=0; i < width*width ; i++){\r\n            let square = document.createElement('div');\r\n            let num = 0;\r\n            square.innerHTML = `<span class=\"num\" data-num=${num}></span>`\r\n            gridDisplay.appendChild(square);\r\n            squares.push(square);\r\n            \r\n        }\r\n        generate()\r\n        generate()\r\n        \r\n    }\r\n    createBoard()\r\n    // addNumClass();\r\n\r\n    //generate a random number;\r\n    function generate() {\r\n        let randomNumber = Math.floor(Math.random() * squares.length);\r\n        if(squares[randomNumber].children[0].getAttribute('data-num') == 0){\r\n            let num = 2;\r\n            squares[randomNumber].innerHTML = `<span class=\"num\" data-num=${num}></span>`;\r\n            // checkForGameOver();\r\n        }else generate();\r\n\r\n    }\r\n\r\n\r\n    //swipe right\r\n    function moveRight() {\r\n        for( let i=0 ; i < width*width; i++){\r\n            if( i % 4 === 0){//0,4,8,12\r\n                //get each num in row\r\n                let totalOne = squares[i].children[0].getAttribute('data-num');\r\n                let totalTwo = squares[i+1].children[0].getAttribute('data-num');\r\n                let totalThree = squares[i+2].children[0].getAttribute('data-num');\r\n                let totalFour = squares[i+3].children[0].getAttribute('data-num');\r\n                let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n                // console.log(row)\r\n\r\n                let filteredRow = row.filter ( num => num);\r\n                let missing = width - filteredRow.length;\r\n                let zeros = Array(missing).fill(0);\r\n                let newRow = zeros.concat(filteredRow);\r\n                \r\n                squares[i].children[0].setAttribute('data-num',newRow[0]) \r\n                squares[i+1].children[0].setAttribute('data-num',newRow[1]) \r\n                squares[i+2].children[0].setAttribute('data-num',newRow[2]) \r\n                squares[i+3].children[0].setAttribute('data-num',newRow[3]) \r\n            }\r\n        }\r\n    }\r\n\r\n    //swipe left\r\n    function moveLeft() {\r\n        for( let i=0 ; i < width*width; i++){\r\n            if( i % 4 === 0){//0,4,8,12\r\n                //get each num in row\r\n                let totalOne = squares[i].children[0].getAttribute('data-num');\r\n                let totalTwo = squares[i+1].children[0].getAttribute('data-num');\r\n                let totalThree = squares[i+2].children[0].getAttribute('data-num');\r\n                let totalFour = squares[i+3].children[0].getAttribute('data-num');\r\n                let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n\r\n                let filteredRow = row.filter ( num => num);\r\n                let missing = width - filteredRow.length;\r\n                let zeros = Array(missing).fill(0);\r\n                let newRow = filteredRow.concat(zeros);\r\n\r\n                squares[i].children[0].setAttribute('data-num',newRow[0]);\r\n                squares[i+1].children[0].setAttribute('data-num',newRow[1]);\r\n                squares[i+2].children[0].setAttribute('data-num',newRow[2]);\r\n                squares[i+3].children[0].setAttribute('data-num',newRow[3]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //swipe down\r\n    function moveDown() {\r\n        for (let i=0; i< width; i++){\r\n            let totalOne = squares[i].children[0].getAttribute('data-num');\r\n            let totalTwo = squares[i+width].children[0].getAttribute('data-num');\r\n            let totalThree = squares[i+(width*2)].children[0].getAttribute('data-num');\r\n            let totalFour = squares[i+(width*3)].children[0].getAttribute('data-num');\r\n            let column = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n\r\n            let filteredColumn = column.filter ( num => num);\r\n            let missing = width - filteredColumn.length;\r\n            let zeros = Array(missing).fill(0);\r\n            let newColumn = zeros.concat(filteredColumn);\r\n                \r\n            squares[i].children[0].setAttribute('data-num',newColumn[0]);\r\n            squares[i+width].children[0].setAttribute('data-num',newColumn[1]);\r\n            squares[i+(width*2)].children[0].setAttribute('data-num',newColumn[2]);\r\n            squares[i+(width*3)].children[0].setAttribute('data-num',newColumn[3]);\r\n        }\r\n    }\r\n\r\n    //swipe Up\r\n    function moveUp() {\r\n        for (let i=0; i< width; i++){\r\n            let totalOne = squares[i].children[0].getAttribute('data-num');\r\n            let totalTwo = squares[i+width].children[0].getAttribute('data-num');\r\n            let totalThree = squares[i+(width*2)].children[0].getAttribute('data-num');\r\n            let totalFour = squares[i+(width*3)].children[0].getAttribute('data-num');\r\n            let column = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n\r\n            let filteredColumn = column.filter ( num => num);\r\n            let missing = width - filteredColumn.length;\r\n            let zeros = Array(missing).fill(0);\r\n            let newColumn = filteredColumn.concat(zeros)\r\n                \r\n            squares[i].children[0].setAttribute('data-num',newColumn[0]);\r\n            squares[i+width].children[0].setAttribute('data-num',newColumn[1]);\r\n            squares[i+(width*2)].children[0].setAttribute('data-num',newColumn[2]);\r\n            squares[i+(width*3)].children[0].setAttribute('data-num',newColumn[3]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    function combineRow() {\r\n        for (let i= 0; i < 15; i++){\r\n            if (squares[i].children[0].getAttribute('data-num') === squares[i+1].children[0].getAttribute('data-num')) {\r\n                let combinedTotal = parseInt(squares[i].children[0].getAttribute('data-num')) + parseInt(squares[i+1].children[0].getAttribute('data-num'));\r\n\r\n                squares[i].children[0].setAttribute('data-num',combinedTotal);\r\n                squares[i+1].children[0].setAttribute('data-num',0);\r\n                score += combinedTotal;\r\n                scoreDisplay.innerHTML = score;\r\n                checkForGameOver();\r\n            }\r\n        }\r\n        checkForWin()\r\n    }\r\n\r\n    function combineColumn() {\r\n        for (let i= 0; i < 12; i++){\r\n            if (squares[i].children[0].getAttribute('data-num') === squares[i+width].children[0].getAttribute('data-num')) {\r\n            \r\n\r\n                let combinedTotal = parseInt(squares[i].children[0].getAttribute('data-num')) + parseInt(squares[i+width].children[0].getAttribute('data-num'));\r\n                // console.log(squares[i].children[0].innerHTML)\r\n                // console.log(squares[i+width].children[0].innerHTML)\r\n\r\n                squares[i].children[0].setAttribute('data-num',combinedTotal);\r\n                squares[i+width].children[0].setAttribute('data-num',0);\r\n                score += combinedTotal;\r\n                scoreDisplay.innerHTML = score;\r\n                checkForGameOver();\r\n\r\n            }\r\n        }\r\n        checkForWin()\r\n    }\r\n\r\n\r\n    \r\n    //key functions\r\n    function keyRight() {\r\n        moveRight();\r\n        combineRow();\r\n        moveRight();\r\n        generate();\r\n    }\r\n    function keyLeft() {\r\n        moveLeft();\r\n        combineRow();\r\n        moveLeft();\r\n        generate();\r\n    }\r\n    function keyDown() {\r\n        moveDown();\r\n        combineColumn();\r\n        moveDown();\r\n        generate();\r\n    }\r\n\r\n    function keyUp() {\r\n        moveUp();\r\n        combineColumn();\r\n        moveUp();\r\n        generate();\r\n    }\r\n\r\n\r\n    //assign key codes\r\n    function control (e) {\r\n        switch (e.keyCode){\r\n            case 37:\r\n                keyLeft();\r\n                break;\r\n\r\n            case 38:\r\n                keyUp();\r\n                break;\r\n\r\n            case 39:\r\n                keyRight();\r\n                break;\r\n            case 40:\r\n                keyDown();\r\n                break;\r\n        }\r\n    }\r\n\r\n    //check for number 2048\r\n    function checkForWin() {\r\n        for( let i=0; i < squares.length; i++){\r\n            if(squares[i].children[0].getAttribute('data-num') == winScore){\r\n                scoreDisplay.innerHTML = 'YOU WIN!'\r\n                document.removeEventListener('keyup',control)\r\n            }\r\n        }\r\n    }\r\n\r\n    //check if there are no zeros on the boards and\r\n    function checkForGameOver() {\r\n        let zeros = 0\r\n        for( let i =0; i< squares.length; i++ ){\r\n            if(squares[i].children[0].getAttribute('data-num') ==0){\r\n                zeros++;\r\n            }\r\n        }\r\n        if(zeros === 0){\r\n            scoreDisplay.innerHTML = \"YOU LOSE\";\r\n            document.removeEventListener('keyup',control)\r\n        }\r\n    }\r\n\r\n    document.addEventListener('keyup',control);\r\n\r\n    document.addEventListener('touchstart', handleTouchStart, false);        \r\n    document.addEventListener('touchmove', handleTouchMove, false);\r\n    \r\n    let xDown = null,                                            \r\n        yDown = null;\r\n    \r\n    function getTouches(e) {\r\n      return e.touches ||             // browser API\r\n             e.originalEvent.touches; // jQuery\r\n    }                                                     \r\n    \r\n    function handleTouchStart(e) {\r\n        const firstTouch = getTouches(e)[0];                                      \r\n        xDown = firstTouch.clientX;                                      \r\n        yDown = firstTouch.clientY;                                      \r\n    };                                                \r\n    \r\n    function handleTouchMove(e) {\r\n        if ( ! xDown || ! yDown ) {\r\n            return;\r\n        }\r\n    \r\n        var xUp = e.touches[0].clientX;                                    \r\n        var yUp = e.touches[0].clientY;\r\n    \r\n        var xDiff = xDown - xUp;\r\n        var yDiff = yDown - yUp;\r\n    \r\n        if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/\r\n            if ( xDiff > 0 ) {\r\n                /* left swipe */ \r\n                keyLeft();\r\n            } else {\r\n                /* right swipe */\r\n                keyRight();\r\n            }                       \r\n        } else {\r\n            if ( yDiff > 0 ) {\r\n                /* up swipe */ \r\n                keyUp();\r\n            } else { \r\n                /* down swipe */\r\n                keyDown();\r\n            }                                                                 \r\n        }\r\n        /* reset values */\r\n        xDown = null;\r\n        yDown = null;                                             \r\n    };\r\n\r\n\r\n});\r\n\r\n\r\n\r\n"]}